name: Release

on:
  push:
    branches: [ main ]

jobs:
  release-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '21'
      - run: npm install
      - name: Run semantic-release
        id: semantic
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Debug release output
        run: |
          echo "Semantic-release exit code: ${{ steps.semantic.outcome }}"
          git tag -l
      - name: Set version
        id: set_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "Version set to: $VERSION"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  package-and-upload:
    needs: release-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.13'
      - name: Create runtime artifact
        run: |
          mkdir -p release
          cp requirements.txt release/
          cp -r src release/
          # Add install.sh to the release
          cat <<'EOF' > release/install.sh
          #!/bin/bash
          if ! command -v python3.13 &> /dev/null; then
              echo "Error: Python 3.13 is required but not found. Please install it first."
              exit 1
          fi
          echo "Creating virtual environment..."
          python3.13 -m venv venv
          source venv/bin/activate
          echo "Installing dependencies from requirements.txt..."
          pip install -r requirements.txt
          if [ ! -f ".env" ]; then
              echo "Warning: .env file not found. Creating a template..."
              cat <<EOL > .env
          C2G_TOKEN=your_c2g_token
          CVU_TOKEN=your_cvu_token
          COMPENSATION_TOKEN=your_compensation_token
          ERROR_TOKEN=your_error_token
          API_URL=https://redcap.your-institution.org/api/
          EOL
              echo "Please edit .env with your REDCap tokens and API URL."
          else
              echo ".env file found. Skipping template creation."
          fi
          deactivate
          echo "Installation complete! To test, run:"
          echo "  source venv/bin/activate"
          echo "  python src/main.py"
          echo "See README.md for cronjob setup."
          EOF
          chmod +x release/install.sh  # Make it executable
          cd release
          zip -r ../runtime-${{ needs.release-version.outputs.version }}.zip .
      - name: Debug outputs
        run: |
          echo "Version: ${{ needs.release-version.outputs.version }}"
      - name: Upload runtime artifact
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release-version.outputs.version }}
          files: ./runtime-${{ needs.release-version.outputs.version }}.zip
          name: runtime-${{ needs.release-version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}